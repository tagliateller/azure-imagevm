# Create or update a template deployment based on a uri to the template and parameters specified inline.
# This deploys a VM with SSH support for a given public key, then stores the result in 'azure_vms'. The result is then
# used to create a new host group. This host group is then used to wait for each instance to respond to the public IP SSH.
---
- hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - secrets.yml
    
  vars:
    azure_resource_group_name: imagesrg
    
  tasks:
    - name: Destroy Azure Deploy
      azure_rm_deployment:
        state: absent
        subscription_id: "{{ azure_subscription_id }}"
        resource_group_name: "{{ azure_resource_group_name }}"

    - name: Create Azure Deploy
      azure_rm_deployment:
        state: present
        subscription_id: "{{ azure_subscription_id }}"
        resource_group_name: "{{ azure_resource_group_name }}"
        parameters:
          location: 
            value: eastus
          networkInterfaceName:
            value: "imagesvm889"
          enableAcceleratedNetworking:
            value: true
          networkSecurityGroupName:
            value: "imagesvm-nsg"
          networkSecurityGroupRules:
            value: [
                {
                    "name": "RDP",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "3389"
                    }
                }
            ]
          subnetName:
            value: "default"
          virtualNetworkName:
            value: "img2-vnet"
          addressPrefixes:
            value: [
                "10.1.1.0/24"
            ]
          subnets:
            value: [
                {
                    "name": "default",
                    "properties": {
                        "addressPrefix": "10.1.1.0/24"
                    }
                }
            ]
          publicIpAddressName:
            value: "imagesvm-ip"
          publicIpAddressType:
            value: "Dynamic"
          publicIpAddressSku:
            value: "Basic"
          virtualMachineName:
            value: "imagesvm"
          virtualMachineRG:
            value: "{{ azure_resource_group_name }}"
          osDiskType:
            value: "StandardSSD_LRS"
          virtualMachineSize:
            value: "Standard_D4_v3"
          adminUsername:
            value: "{{ azure_admin_username }}"
          adminPassword:
            value: "{{ azure_admin_password }}"
          diagnosticsStorageAccountName:
            value: "img2diag"
          diagnosticsStorageAccountId:
            value: "Microsoft.Storage/storageAccounts/img2diag"
          diagnosticsStorageAccountType:
            value: "Standard_LRS"
          diagnosticsStorageAccountKind:
            value: "Storage"
          template_link: 'https://raw.githubusercontent.com/tagliateller/azure-imagevm/master/azuredeploy.json'
      register: azure

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item['ips'][0].public_ip }}"
        groupname: azure_vms
      loop: "{{ azure.deployment.instances }}"

    - hosts: azure_vms
      user: devopscle
      tasks:
        - name: Wait for SSH to come up
          wait_for:
            port: 22
            timeout: 2000
            state: started
        - name: echo the hostname of the vm
          shell: hostname
       
- hosts: "{{host}}"

  tasks:    
  - name: Install firefox    
    win_chocolatey:    
      name: firefox
      
      
          
